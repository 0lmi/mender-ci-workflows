#
# The example shows how to deploy a Mender artifact to a single device.
#
# 'MENDER_SERVER_ACCESS_TOKEN' secret is required to be set in GitHub repo settings
#

name: Build and Deploy to a Single Device

on:
  push:
    branches:
      - main

env:
  MENDER_SERVER_URL: https://hosted.mender.io           # Mender server URL
  MENDER_DEPLOYMENT_NAME: my-app-v1.0-dev               # Mender deployment name
  MENDER_RELEASE_NAME: change-the-world-to-better-v1.0  # Mender release name
  MENDER_ARTIFACT_NAME: artifact.mender                 # Mender artifact name
  MENDER_DEVICES_LIST: '[\"5ca6090ff3a8e90001206535\"]' # List of devices to deploy built artifact to

jobs:
  #
  # Build two Mender artifacts and deploy them to related groups
  #
  build-and-deploy:
    runs-on: ubuntu-latest
    # conrainer with pre-installed mender-artifact and mender-cli tools
    container:
      image: mendersoftware/mender-ci-tools:mender-master
    steps:
      # Checkout git repository
      - uses: actions/checkout@v2
      # Creates Mender Artifact
      - name: Create Mender Artifact
        run: |
          echo /home/root/.ssh > dest_dir
          echo authorized_keys > filename
          echo key > authorized_keys
          mender-artifact write module-image \
            -T single-file \
            --device-type raspberrypi4 \
            -o ${MENDER_ARTIFACT_NAME} \
            -n ${MENDER_RELEASE_NAME} \
            --software-name authorized_keys \
            --software-version 1.0 \
            -f dest_dir \
            -f filename \
            -f authorized_keys
      # Uploads Mender Artifact to a Mender server
      - name: Upload Mender Artifacts to Mender server
        uses: mendersoftware/mender-gh-action-upload-artifact@master
        with:
          mender_pat: ${{ secrets.MENDER_SERVER_ACCESS_TOKEN }}
          mender_artifact: ${{ env.MENDER_ARTIFACT_NAME }}
          mender_uri: ${{ env.MENDER_SERVER_URL }}
      # Creates a deployment on a Mender server
      - name: Create deployment on Mender server
        uses: mendersoftware/mender-gh-action-create-deployment@master
        with:
          mender_pat: ${{ secrets.MENDER_SERVER_ACCESS_TOKEN }}
          mender_uri: ${{ env.MENDER_SERVER_URL }}
          mender_deployment_name: ${{ env.MENDER_DEPLOYMENT_NAME }}
          mender_release_name: ${{ env.MENDER_RELEASE_NAME }}
          mender_devices_list: ${{ env.MENDER_DEVICES_LIST }}
